import { PropType } from 'vue';
import { Jss, GenerateId, SheetsRegistry, CreateGenerateIdOptions } from 'jss';
declare const JssProvider: (new () => import("vue").ComponentPublicInstance<{} & {
    media?: string | undefined;
    id?: CreateGenerateIdOptions | undefined;
    jss?: Jss | undefined;
    registry?: SheetsRegistry | undefined;
    classNamePrefix?: string | undefined;
    disableStylesGeneration?: boolean | undefined;
    generateId?: GenerateId | undefined;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[] | undefined, {}, {}, {}, string[] | Record<string, ((...args: any[]) => any) | null>, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, import("vue").ComponentOptionsBase<{} & {
    media?: string | undefined;
    id?: CreateGenerateIdOptions | undefined;
    jss?: Jss | undefined;
    registry?: SheetsRegistry | undefined;
    classNamePrefix?: string | undefined;
    disableStylesGeneration?: boolean | undefined;
    generateId?: GenerateId | undefined;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[] | undefined, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, string[] | Record<string, ((...args: any[]) => any) | null>, string>>) & import("vue").ComponentOptionsBase<Readonly<{} & {
    media?: string | undefined;
    id?: CreateGenerateIdOptions | undefined;
    jss?: Jss | undefined;
    registry?: SheetsRegistry | undefined;
    classNamePrefix?: string | undefined;
    disableStylesGeneration?: boolean | undefined;
    generateId?: GenerateId | undefined;
}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[] | undefined, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, string[] | Record<string, ((...args: any[]) => any) | null>, string> & {
    props: {
        jss: {
            type: PropType<Jss>;
            required: false;
        };
        registry: {
            type: PropType<SheetsRegistry>;
            required: false;
        };
        generateId: {
            type: PropType<GenerateId>;
            required: false;
        };
        classNamePrefix: {
            type: StringConstructor;
            required: false;
        };
        disableStylesGeneration: {
            type: BooleanConstructor;
        };
        media: {
            type: StringConstructor;
        };
        id: {
            type: PropType<CreateGenerateIdOptions>;
        };
    };
} & ThisType<import("vue").ComponentPublicInstance<Readonly<{} & {
    media?: string | undefined;
    id?: CreateGenerateIdOptions | undefined;
    jss?: Jss | undefined;
    registry?: SheetsRegistry | undefined;
    classNamePrefix?: string | undefined;
    disableStylesGeneration?: boolean | undefined;
    generateId?: GenerateId | undefined;
}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[] | undefined, {}, {}, {}, string[] | Record<string, ((...args: any[]) => any) | null>, Readonly<{} & {
    media?: string | undefined;
    id?: CreateGenerateIdOptions | undefined;
    jss?: Jss | undefined;
    registry?: SheetsRegistry | undefined;
    classNamePrefix?: string | undefined;
    disableStylesGeneration?: boolean | undefined;
    generateId?: GenerateId | undefined;
}>, import("vue").ComponentOptionsBase<Readonly<{} & {
    media?: string | undefined;
    id?: CreateGenerateIdOptions | undefined;
    jss?: Jss | undefined;
    registry?: SheetsRegistry | undefined;
    classNamePrefix?: string | undefined;
    disableStylesGeneration?: boolean | undefined;
    generateId?: GenerateId | undefined;
}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[] | undefined, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, string[] | Record<string, ((...args: any[]) => any) | null>, string>>>;
export default JssProvider;
