{"remainingRequest":"/Users/junronngcai/Downloads/vue3-json-schema-form/node_modules/babel-loader/lib/index.js!/Users/junronngcai/Downloads/vue3-json-schema-form/node_modules/ts-loader/index.js??ref--14-2!/Users/junronngcai/Downloads/vue3-json-schema-form/node_modules/eslint-loader/index.js??ref--13-0!/Users/junronngcai/Downloads/vue3-json-schema-form/lib/context.ts","dependencies":[{"path":"/Users/junronngcai/Downloads/vue3-json-schema-form/lib/context.ts","mtime":1608950736408},{"path":"/Users/junronngcai/Downloads/vue3-json-schema-form/node_modules/cache-loader/dist/cjs.js","mtime":1607437832202},{"path":"/Users/junronngcai/Downloads/vue3-json-schema-form/node_modules/babel-loader/lib/index.js","mtime":1608516392415},{"path":"/Users/junronngcai/Downloads/vue3-json-schema-form/node_modules/ts-loader/index.js","mtime":1608516394013},{"path":"/Users/junronngcai/Downloads/vue3-json-schema-form/node_modules/eslint-loader/index.js","mtime":1607437999134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCB7IGluamVjdCB9IGZyb20gJ3Z1ZSc7CmV4cG9ydCB2YXIgU2NoZW1hRm9ybUNvbnRleHRLZXkgPSBTeW1ib2woKTsKZXhwb3J0IGZ1bmN0aW9uIHVzZVZKU0ZDb250ZXh0KCkgewogIHZhciBjb250ZXh0ID0gaW5qZWN0KFNjaGVtYUZvcm1Db250ZXh0S2V5KTsKCiAgaWYgKCFjb250ZXh0KSB7CiAgICB0aHJvdyBFcnJvcignU2NoZW1hRm9ybSBuZWVkZWQnKTsKICB9CgogIHJldHVybiBjb250ZXh0Owp9"},{"version":3,"sources":["/Users/junronngcai/Downloads/vue3-json-schema-form/node_modules/eslint-loader/index.js??ref--13-0!/Users/junronngcai/Downloads/vue3-json-schema-form/lib/context.ts"],"names":[],"mappings":";;;AAAA,SAAS,MAAT,QAA4B,KAA5B;AAGA,OAAO,IAAM,oBAAoB,GAAG,MAAM,EAAnC;AAEP,OAAM,SAAU,cAAV,GAAwB;AAC5B,MAAM,OAAO,GAMG,MAAM,CAAC,oBAAD,CANtB;;AAQA,MAAI,CAAC,OAAL,EAAc;AACZ,UAAM,KAAK,CAAC,mBAAD,CAAX;AACD;;AAED,SAAO,OAAP;AACD","sourcesContent":["import { inject, Ref } from 'vue'\nimport { CommonFieldType, CommonWidgetDefine, Schema } from './types'\n\nexport const SchemaFormContextKey = Symbol()\n\nexport function useVJSFContext() {\n  const context:\n    | {\n        SchemaItem: CommonFieldType\n        formatMapRef: Ref<{ [key: string]: CommonWidgetDefine }>\n        transformSchemaRef: Ref<(schema: Schema) => Schema>\n      }\n    | undefined = inject(SchemaFormContextKey)\n\n  if (!context) {\n    throw Error('SchemaForm needed')\n  }\n\n  return context\n}\n"],"sourceRoot":""}]}